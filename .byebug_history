exit
j.id
j.keys
j
exit
j.created_time.between?(from, to)
j.created_time
from
j.tags.include?('pigf')
j.tags.include?('pig')
j.tags
j.link.tags
j.link
j.images.keys
j.images
j.keys
j
c
params['search']['hashtag']
exit
c
exit
c
j.link
j['images']
j['image']
j.keys
j
exit
c
object[:created_time]j
object[:created_time]
object.keys
object[created_time]
object['created_time']
object.created_time
object
c
a.class
a.length
a = picHash.keys.take(20)
picHash.keys.take(20)
picHash.keys.length
picHash.keys
c
picHash.values
picHash.keys.values
picHash.keys.length
picHash.keys
picHash[0]
picHash.length
picHash
c
JSON.generate(picHash).class
JSON.generate(picHash)
picHash
c
arr
c
arr
c
arr
c
arr
exit
arr
c
arr[0]['user']['id']
arr[0]['user']['username']
arr[0]['user'][username]
arr[0]['user']
arr[0]['filter']
arr[0]['location']
arr[0]['location]
arr[0].keys
arr[0].username
arr[0].location
arr[0]
arr
exit
arr
exit
arr[0]
arr
c
cc
arr
c
params['search']['from'].to_time.to_i
params['search']['from']
['search']['from']
from
exit
 client.tag_recent_media(params['search']['hashtag']).pagination
 client.tag_recent_media(params['search']['hashtag']).pagination.next_max_id
c
arr.count
arr
exit
client.tag_recent_media(tag[-1].name)
tag[-1].name
tag[-1].media_count
tag[last].media_count
tag[0].media_count
tag[0]
tag
exit
arr.class
arr = JSON.generate(arr)
arr.class
arr
exit
c
users.size
pic_creation < to
users
exit
DateTime.strptime(user['created_time'], '%s')
user
pic_creation
pic_creation < DateTime.parse(params['search']['from'])
n
pic_creation < DateTime.parse(params['search']['from'])
pic_creation
exit
DateTime.parse(params['search']['from'])
c
completed
c
 search.to
search.from
c
search.save
search
exit
search.from
search
exit
DateTime.parse(params['search']['from'])
params['search']['from']
c
users[0]['created_time']
users[0]['created_time'][
users[0]['filter']
users[0]['comments']
users[0]['comments']['created_time']
users[0]['images']
users[0]['images']['created_time']
users[0]['images']['low_resolution']
users[0]['images']
users[0]
users
c
a.class
a = JSON.generate(arr)
JSON.generate(arr)
arr
c
JSON.generate(arr)
arr
arr.class
arr = JSON(arr)
arr.class
JSON(arr)
JSON.stringify(arr)
arr
c
json
query
c
params['search']['hashtag']
params['search']
params
c
params
c
params['search']
params['from']
params['hashtag']
params.keys
params[0]
params[hashtag]
params
params.hashtag
params[hashtag]
params
c
params
